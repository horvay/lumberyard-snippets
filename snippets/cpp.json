{
    "ComponentHeader": {
        "prefix": "comph",
        "body": [
            "#pragma once",
            "#include <AzCore/Component/Component.h>",
            "",
            "namespace $1",
            "{",
            "    class $TM_FILENAME_BASE",
            "        : public AZ::Component",
            "    {",
            "    public:",
            "        AZ_COMPONENT($TM_FILENAME_BASE, \"{${CLIPBOARD}}\"); // NOLINT",
            "",
            "        static void Reflect(AZ::ReflectContext* reflection);",
            "",
            "        void Init() override;",
            "        void Activate() override;",
            "        void Deactivate() override;",
            "",
            "    };",
            "} // namespace $1",
            ""
        ],
        "description": "Create LY component header"
    },
    "ComponentSource": {
        "prefix": "comps",
        "body": [
            "#include \"$TM_FILENAME_BASE.h\"",
            "#include <AzCore/Serialization/EditContext.h>",
            "",
            "namespace $1",
            "{",
            "   void $TM_FILENAME_BASE::Reflect(AZ::ReflectContext* reflection)",
            "   {",
            "       if (auto serializationContext = azrtti_cast<AZ::SerializeContext*>(reflection))",
            "       {",
            "           serializationContext->Class<$TM_FILENAME_BASE>()",
            "               ->Version(1);",
            "",
            "           if (auto editContext = serializationContext->GetEditContext())",
            "           {",
            "               editContext->Class<$TM_FILENAME_BASE>(\"$TM_FILENAME_BASE\", \"$2\")",
            "                   ->ClassElement(AZ::Edit::ClassElements::EditorData, \"\")",
            "                   ->Attribute(AZ::Edit::Attributes::Category, \"$1\")",
            "                   ->Attribute(AZ::Edit::Attributes::AppearsInAddComponentMenu, AZ_CRC(\"Game\"));",
            "           }",
            "       }",
            "   }",
            "",
            "   void $TM_FILENAME_BASE::Init()",
            "   {",
            "   }",
            "",
            "   void $TM_FILENAME_BASE::Activate()",
            "   {",
            "   }",
            "  ",
            "   void $TM_FILENAME_BASE::Deactivate()",
            "   {",
            "   }",
            "} // namespace $1",
            ""
        ],
        "description": "Create LY component source"
    },
    "ebustraits": {
        "prefix": "ebustraits",
        "body": [
            "#pragma once",
            "#include <AzCore/EBus/EBus.h>",
            "",
            "namespace $1",
            "{",
            "    class $2",
            "        : public AZ::EBusTraits",
            "    {",
            "    public:",
            "        $3",
            "    };",
            "",
            "    using $2Bus = AZ::EBus<$2>;",
            "}",
            ""
        ],
        "description": "Create LY component header"
    },
    "ebuscomp": {
        "prefix": "ebuscomp",
        "body": [
            "#pragma once",
            "#include <AzCore/Component/Component.h>",
            "",
            "namespace $1",
            "{",
            "    class $2",
            "        : public AZ::ComponentBus",
            "    {",
            "    public:",
            "        $3",
            "    };",
            "",
            "    using $2Bus = AZ::EBus<$2>;",
            "}",
            ""
        ],
        "description": "Create LY component header"
    },
    "integt": {
        "prefix": "integt",
        "body": [
            "#include <AzTest/AzTest.h>",
            "",
            "class Integ_$1Tests",
            "    : public ::testing::Test",
            "{",
            "public:",
            "",
            "    virtual void SetUp()",
            "    {",
            "    }",
            "",
            "    Integ_$1Tests()",
            "    {",
            "    }",
            "",
            "    ~Integ_$1Tests()",
            "    {",
            "    }",
            "};",
            "",
            "TEST_F(Integ_$1Tests, $1_Smoke)",
            "{",
            "}",
            "",
            "AZ_INTEG_TEST_HOOK();",
            ""
        ],
        "description": "Create LY integration test"
    },
    "unitt": {
        "prefix": "unitt",
        "body": [
            "#include <AzTest/AzTest.h>",
            "",
            "class $1Tests",
            "    : public ::testing::Test",
            "{",
            "public:",
            "",
            "    virtual void SetUp()",
            "    {",
            "    }",
            "",
            "    $1Tests()",
            "    {",
            "    }",
            "",
            "    ~$1Tests()",
            "    {",
            "    }",
            "};",
            "",
            "TEST_F($1Tests, $1_First)",
            "{",
            "}",
            "",
            "AZ_UNIT_TEST_HOOK();",
            ""
        ],
        "description": "Create LY unit test"
    },
    "lyrf": {
        "prefix": "lyrf",
        "body": [
            "->Field( \"$CLIPBOARD\", &$TM_FILENAME_BASE::$CLIPBOARD )"
        ],
        "description": "Create reflection field"
    },
    "lyrd": {
        "prefix": "lyrd",
        "body": [
            "->DataElement( AZ::Edit::UIHandlers::Default, &$TM_FILENAME_BASE::$CLIPBOARD, \"$1\", \"[$2]\" )"
        ],
        "description": "Create reflection data element"
    },
    "event": {
        "prefix": "event",
        "body": [
            "$1::Event( GetEntityId(), &$1::Events::$2 );"
        ],
        "description": "Create reflection data element"
    },
    "eventr": {
        "prefix": "eventr",
        "body": [
            "$1::EventResult( $CLIPBOARD, GetEntityId(), &$1:Events::$2 );"
        ],
        "description": "Create reflection data element"
    },
    "broadc": {
        "prefix": "broadc",
        "body": [
            "$1::Broadcast( &$1::Events::$2 );"
        ],
        "description": "Create reflection data element"
    },
    "broadcr": {
        "prefix": "broadcr",
        "body": [
            "$1::BroadcastResult( $CLIPBOARD, &$1:Events::$2 );"
        ],
        "description": "Create reflection data element"
    },
    "module": {
        "prefix": "module",
        "body": [
            "#include \"$CLIPBOARD.h\"",
            "$CLIPBOARD::CreateDescriptor(),"
        ],
        "description": "Create reflection data element"
    }

}